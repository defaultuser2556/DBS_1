{
    "AWSTemplateFormatVersion": "2010-09-09",
    

    "Parameters": {


        "apiGatewayName": {
            "Type": "String",
            "Default": "apiGatewayAutomation"
        },
        "apiGatewayStageName": {
            "Type": "String",
            "AllowedPattern": "[a-zA-Z0-9]+",
            "Default": "apiGatewayStage"
        },
        "apiGatewayHTTPMethod": {
            "Type": "String",
            "Default": "POST"
        },
        "lambdaFunctionName": {
            "Type": "String",
            "AllowedPattern": "[a-zA-Z0-9]+[a-zA-Z0-9-]+[a-zA-Z0-9]+",
            "Default": "lambda4ec2"
        },
        "pybucket" : {
            "Type": "String"
        }
    },


    "Resources": {

        "apiGatewayAutomation": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "EndpointConfiguration": {
                    "Types": [
                        "REGIONAL"
                    ]
                },
                "Name": {
                    "Ref": "apiGatewayName"
                }
            }
        },

        
        "apiGatewayRootMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": {
                    "Ref": "apiGatewayHTTPMethod"
                },
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "Type": "AWS_PROXY",
                    "Uri": {
                        "Fn::Sub": [
                            "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations",
                            {
                                "lambdaArn": {
                                    "Fn::GetAtt": [
                                        "lambdaFunction4ec2",
                                        "Arn"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "ResourceId": {
                    "Fn::GetAtt": [
                        "apiGatewayAutomation",
                        "RootResourceId"
                    ]
                },
                "RestApiId": {
                    "Ref": "apiGatewayAutomation"
                }
            }
        },


        "apiGatewayDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "DependsOn": [
                "apiGatewayRootMethod"
            ],
            "Properties": {
                "RestApiId": {
                    "Ref": "apiGatewayAutomation"
                },
                "StageName": {
                    "Ref": "apiGatewayStageName"
                }
            }
        },


        "lambdaFunction4ec2": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Architectures" : ["arm64"],
                "Code": {
                    "S3Bucket" : { "Ref" : "pybucket" },
                    "S3Key": "lambda.zip"
                },
                "FunctionName": {
                    "Ref": "lambdaFunctionName"
                },
                "Handler": "index.handler",
                "MemorySize": 128,
                "Runtime": "python3.8",
                "Role": {
                    "Fn::GetAtt": [
                        "lambdaIAMRole4ec2",
                        "Arn"
                    ]
                }
            }
        },


        "lambdaApiGatewayInvoke": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "lambdaFunction4ec2",
                        "Arn"
                    ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${apiGatewayAutomation}/${apiGatewayStageName}/${apiGatewayHTTPMethod}/"
                }
            }
        },



        "lambdaIAMRole4ec2": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": "ec2:*",
                                    "Effect": "Allow",
                                    "Resource": "*"
                                }
                            ]
                        },
                        "PolicyName": "lambdapolicyec2"
                    },
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "iam:CreateInstanceProfile",
                                        "iam:GetRole",
                                        "iam:AddRoleToInstanceProfile",
                                        "iam:CreateRole",
                                        "iam:CreatePolicy",
                                        "iam:PutRolePolicy",
                                        "iam:PassRole",
                                        "iam:GetRolePolicy",
                                        "iam:GetInstanceProfile"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                }
                            ]
                        },
                        "PolicyName": "lambdapolicyiam"
                    },
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "cloudformation:CreateStack",
                                        "cloudformation:DescribeStacks",
                                        "cloudformation:ListStacks",
                                        "cloudformation:DeleteStack"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                }
                            ]
                        },
                        "PolicyName": "lambdapolicycf"
                    },
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": "s3:CreateBucket",
                                    "Effect": "Allow",
                                    "Resource": "*"
                                }
                            ]
                        },
                        "PolicyName": "lambdapolicys3"
                    },
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${lambdaFunctionName}:*"
                                        }
                                    ]
                                }
                            ]
                        },
                        "PolicyName": "lambdapolicylogs"
                    }
                ],
                "RoleName": "policylambda4ec2",
                "Path": "/"
            }
        }
    },


    "Outputs": {
        "apiGatewayInvokeURL": {
            "Value": {
                "Fn::Sub": "https://${apiGatewayAutomation}.execute-api.${AWS::Region}.amazonaws.com/${apiGatewayStageName}"
            }
        },
        "lambdaArn": {
            "Value": {
                "Fn::GetAtt": [
                    "lambdaFunction4ec2",
                    "Arn"
                ]
            }
        }
    }
}